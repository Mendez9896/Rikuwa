AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Description: my template
Resources:
  MyBucket:
    Type: AWS::S3::Bucket
    Properties:
        BucketName: rikuwa-register-package-23
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: role-register-package
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: register-package-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - dynamodb:*
            - dax:*
            - lambda:InvokeFunction
            - lambda:InvokeAsync
            Resource: "*"

  APIGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: rikuwa-register
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - apigateway.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: gateway-policy-register
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"
              - Effect: Allow
                Action:
                  - apigateway:POST
                Resource: "arn:aws:apigateway:*::/restapis/*/authorizers"
              - Effect: Allow
                Action:
                  - apigateway:PATCH
                Resource: "arn:aws:apigateway:*::/restapis/*/authorizers/*"

  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: rik-register
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml

  PostPackageLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: rik-register-package
      Runtime: python3.6
      CodeUri: ./build
      Handler: lambda1.handler
      Timeout: 30
      MemorySize: 500
      Role: !GetAtt MyLambdaRole.Arn
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: /users
            Method: POST

Outputs:
  ProdDataEndpoint:
    Description: "API Prod stage endpoint, write in line 7"
    Value: !Sub "https://${MyAPI}.execute-api.${AWS::Region}.amazonaws.com/prod/users"
  WebsiteURL:
    Value: !GetAtt [MyBucket, WebsiteURL]
    Description: URL for website hosted on S3